namespace jvm_toolbox_flatbuffers.inspector;

/* STRUCTURES */
table LineData
{
    line_number:int32;
    bytecode_index:int32;
}

table JavaObject
{
    address:long;
    size:int32;
    hash_code:int32;
}

table JavaMethod
{
    name:string;
    signature:string;
    generic_signature:string;
    declaring_class:JavaClass;
    modifiers:int32;
    max_locals:int32;
    arguments_size:int32;
    line_number_data:[LineData];
    method_start:int32;
    method_end:int32;
    bytecodes:[int8];
    is_native:bool;
    is_synthetic:bool;
    is_obsolete:bool;
    address:long;
}

table JavaField
{
    name:string;
    signature:string;
    generic_signature:string;
    declaring_class:JavaClass;
    modifiers:int32;
    offset:int16;
    is_synthetic:bool;
    field_id:long;
}

table JavaClass
{
    signature:string;
    source_file_namne:string;
    status:int16;
    modifiers:int32;
    minor_version:int32;
    major_version:int32;
    is_interface:bool;
    is_array:bool;
    address:long;
    methods:[JavaMethod];
    fields:[JavaField];
}

table JavaStackFrame
{
    frame_count:int32;
}

table JavaThread
{
    state:int32;
    name:string;
    priority:int32;
    is_daemon:bool;
}

/* EVENTS */
table OnSingleStep
{
    thread:JavaThread;
    method:JavaMethod;
    location:long;
}

table OnBreakpoint
{
    thread:JavaThread;
    method:JavaMethod;
    location:long;
}

table OnFieldAccess
{
    thread:JavaThread;
    method:JavaMethod;
    location:long;
    class:JavaClass;
    object:JavaObject;
    field:JavaField;
}

table OnFieldModification
{
    thread:JavaThread;
    method:JavaMethod;
    location:long;
    class:JavaClass;
    object:JavaObject;
    field:JavaField;
    signature_type:int8;
    new_value:long; // This can be any primitive value
}

table OnFramePop
{
    thread:JavaThread;
    method:JavaMethod;
    was_popped_by_exception:bool;
}

table OnException
{
    thread:JavaThread;
    method:JavaMethod;
    location:long;
    exception:JavaObject;
    catch_method:JavaMethod;
    catch_location:long;
}

table OnExceptionCatch
{
    thread:JavaThread;
    method:JavaMethod;
    location:long;
    exception:JavaObject;
}

table OnThreadStart
{
    thread:JavaThread;
}

table OnThreadEnd
{
    thread:JavaThread;
}

table OnClassLoad
{
    thread:JavaThread;
    class:JavaClass;
}

table OnClassPrepare
{
    thread:JavaThread;
    class:JavaClass;
}

table OnClassFileLoad
{
    name:string;
    class:JavaClass;
    loader:JavaObject;
    bytecode:[int8];
}

table OnVMDeath
{
    // Not sure if there's anything to put here
}

table OnVMObjectAllocated
{
    thread:JavaThread;
    object:JavaObject;
    size:long;
    class:JavaClass;
}

table OnVMObjectFree
{
    tag:long;
}